events {
    worker_connections 1024;
}

http {
    upstream lambda {
        server lambda:8080;
    }

    server {
        listen 80;
        server_name localhost;

        location /baskets {
            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Content-Type, Authorization' always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Accept, Content-Type, Authorization';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Proxy to Lambda
            proxy_pass http://lambda/2015-03-31/functions/function/invocations;
            proxy_method POST;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type application/json;

            # Transform request into Lambda event format
            proxy_set_body '{"resource": "/baskets", "path": "/baskets", "httpMethod": "$request_method", "headers": {"accept": "application/json"}, "body": null, "requestContext": {"http": {"path": "/baskets", "method": "$request_method"}}, "isBase64Encoded": false}';
        }
    }
}
